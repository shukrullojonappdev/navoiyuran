---
import { Image } from "astro:assets"

const {links} = Astro.props
---

<!-- Navbar -->
<div class="navbar justify-between">
  <div>
    <a href="/uz/">
      <Image class="duration-300 h-[40px] max-h-[40px] max-w-[160px] min-w-[160px] sm:h-[70px] sm:max-h-[70px] sm:min-w-[280px] min-[1400px]:h-[100px] min-[1400px]:min-w-[400px] min-[1400px]:max-h-[100px] cursor-pointer" src="/images/icon.webp" alt="Navoiyuran logotip" height={100} width={400} loading={"eager"} />
    </a>
  </div>
  <div class="overflow-hidden w-0 h-0">
    <div id="phone-info" class="flex items-center mr-4">
      <span class="material-symbols-outlined text-primary mr-1">
        call
      </span>
      <a href="tel:+998795070050">+998795070050</a>
    </div>
    <div id="email-info" class="flex items-center mr-4">
      <span class="material-symbols-outlined text-primary mr-1">
        mail
      </span>
      <a href="mailto:info@navoiyuran.uz">info@navoiyuran.uz</a>
    </div>
    <div id="search" class="input input-sm flex items-center gap-2 mr-4 input-bordered">
      <input id="search-input" type="text" class="grow" placeholder="Search" aria-label="search" />
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4 opacity-70"><path fill-rule="evenodd" d="M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z" clip-rule="evenodd" /></svg>
    </div>
    <select id="lang-change" class="select select-bordered select-sm max-w-xs mr-4">
      <option disabled selected>UZ</option>
      <option>RU</option>
      <option>EN</option>
    </select>
    <input id="font-size" type="range" min="16" max="22" value="16" class="range range-primary range-sm mr-4 w-[100px]" step="2" />
    <label id="contrast-change" class="swap swap-rotate mr-2">
      <input type="checkbox" id="contrast-toggle" value="false" />
      <span class="material-symbols-outlined swap-on text-3xl">
        eyeglasses
      </span>
      <span class="material-symbols-outlined swap-off text-3xl">
        eyeglasses
      </span>
    </label>
    <label id="theme-change" class="swap swap-rotate mr-2">

      <!-- this hidden checkbox controls the state -->
      <input id="theme-toggle" type="checkbox" class="theme-controller" data-toggle-theme="light,dark" data-act-class="ACTIVECLASS" />
      <!-- sun icon -->
      <span class="material-symbols-outlined swap-off text-3xl">
        light_mode
      </span>
      <!-- moon icon -->
      <span class="material-symbols-outlined swap-on text-3xl">
        dark_mode
      </span>
    </label>
  </div>
  <div class="w-full flex-col hidden navbar-end min-[1400px]:block">
    <div id="nav-row" class="flex w-full items-center justify-end">
    </div>
    <div class="divider m-0"></div>
    <div class="flex w-full justify-end">
      <div>
        <div class="flex items-stretch">
          {links.map((item: any) => {
            if (item.type === 'dropdown') {
              return (
                <div class="dropdown dropdown-hover dropdown-end">
                <button role="button" class="btn btn-ghost rounded-btn btn-sm my-1 text-base">{item.title}</button>
                  <ul class="dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box w-64">
                    {item.items?.map((item: any) => (
                      <li><a href={item.href} data-astro-prefetch="tap"  aria-label={item.title}>{item.title}</a></li>
                    ))}
                  </ul>
                </div>
              )
            }
            return (
              <a href={item.href} class="btn btn-ghost rounded-btn btn-sm my-1 text-base">{item.title}</a>
            )
          })}
        </div>
      </div>
    </div>
  </div>
  <div id="nav-col" class="flex-none min-[1400px]:hidden">
    <label for="site-drawer" aria-label="open sidebar" class="btn btn-square btn-ghost">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-6 h-6 stroke-current"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path></svg>
    </label>
  </div>
</div>

<script>
  const theme = localStorage.getItem('theme')
  const contrast = localStorage.getItem('contrast')
  const fontSize = localStorage.getItem('fontSize')
  const moonIcon = document.getElementById('moon-icon')
  const sunIcon = document.getElementById('sun-icon')
  const themeToggle: any = document.getElementById('theme-toggle')
  const contrastToggle: any = document.getElementById('contrast-toggle')
  const fontSizeElement: any = document.getElementById('font-size')
  const html = document.getElementsByTagName('html')[0]

  if(theme && sunIcon && moonIcon && themeToggle) {
    if (theme === 'light') {
      sunIcon.classList.add('swap-on')
      moonIcon.classList.add('swap-off')
      themeToggle.value = 'dark'
    }
    if (theme === 'dark') {
      sunIcon.classList.add('swap-off')
      moonIcon.classList.add('swap-on')
      themeToggle.value = 'light'
    }
  } else {
    if ((sunIcon && moonIcon && themeToggle)) {
      if(window.matchMedia('(prefers-color-scheme: dark)')) {
        sunIcon.classList.add('swap-off')
        moonIcon.classList.add('swap-on')
        themeToggle.value = 'light'
      } else {
        sunIcon.classList.add('swap-on')
        moonIcon.classList.add('swap-off')
        themeToggle.value = 'dark'
      }
    }
  }

  if(fontSize) {
    fontSizeElement.value = fontSize
    html && (html.setAttribute('style', `font-size: ${fontSize}px`))
  }

  if(fontSizeElement) {
    fontSizeElement.onchange = (e: any) => {
      html && (html.setAttribute('style', `font-size: ${e.target.value}px`))
      localStorage.setItem('fontSize', e.target.value)
    }
  }

  if(contrast) {
    if(contrast === 'true') {
      contrastToggle.value = 'true'
      html.classList.add('contrast')
    }
  }

  if(contrastToggle) {
    contrastToggle.onchange = (e: any) => {
      if(e.target.value === 'false') {
        contrastToggle.value = 'true'
        localStorage.setItem('contrast', 'true')
        html.classList.add('contrast')
      } else {
        contrastToggle.value = 'false'
        localStorage.setItem('contrast', 'false')
        html.classList.remove('contrast')
      }
    }
  }
</script>